################################################################################
##
## This is an example file for defining your own code templates.
##
## The syntax for defining a code template is:
## #TEMPLATE <template name>,<field>[=default value], <field>...
##
## The template name, the fields and their default values should be defined 
## within quotes if they contain non-alphanumeric characters.
## Use "&" in front of a letter in the template name to make the letter become 
## a shortcut, which means that you can use ALT+<letter> to select the template 
## or jump to the field in the dialog box.
## Use ">" in the template to organize the template names in submenus.
##
################################################################################
#TEMPLATE "&Statement>&if"
if( %c )
{
  
}
#TEMPLATE &Statement>&for,"&End Value"=10,&Variable=i
for(int %2 = 0; %2 < %1; ++%2)
{
  %c
}
#TEMPLATE &Corporate>&class,"Class &name",&Description=--,&Created="$DATE$, by $USER_NAME$"
//******************
// CLASS: %1
//
// DESCRIPTION:
//  %2
//
// CREATED: %3
//
// FILE: $FILE_FNAME$
//
class %1
{
public:
  %1();
  ~%1();
  %c
};



#TEMPLATE "&FileDeclare>&FileHeader",&Description,&Version="v0.1",&Author="gang.cheng",&date="$DATE$",&Built="$TOOLKIT_DIR$"
/**
  * File      : $FILE_FNAME$
  *--------------------------------
  * Summary   : %1
  * Date          Version          Author         
  * %4            %2               %3             
  */


#TEMPLATE &Comment>&Function,"Function &name",&Description=--,&Inputpar=--,&Outputpar=-
